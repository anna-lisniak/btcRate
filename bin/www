#!/usr/bin/env node

const { app } = require('../app');
const debug = require('debug')('genesis-test:server');
const http = require('http');
const createFile = require('../services/db');
const DataBase = require('../services/db');
const GLOBAL_CONSTANTS = require('../constants');
require('dotenv').config()

const port = normalizePort(process.env.PORT);
app.set('port', port);

const server = http.createServer(app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
  const port = parseInt(val, 10);
  return isNaN(port) ? 3001 : port;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

async function onListening() {
  var addr = server.address();
  const db = new DataBase(GLOBAL_CONSTANTS.DB_FILE_NAME);
  await db.createFile();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
  console.log('Listening on ' + bind)
}
